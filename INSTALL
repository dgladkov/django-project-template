Development install:

1) sudo easy_install virtualenv
2) virtualenv env
3) source env/bin/activate
4) easy_install pip
5) pip install -U -r project/requirements-dev.txt
6) make syncdb run


Production install:

1) easy_install virtualenv
2) virtualenv env
3) source env/bin/activate
4) easy_install pip
5) pip install -U -r project/requirements-prod.txt
6) Install nginx 0.8.x and uwsgi
7) Configure your nginx host to pass requests to uWSGI socket as described
   here: http://projects.unbit.it/uwsgi/wiki/RunOnNginx
8) make uwsgi

Here is more verbose example of what step 8 does:
$ uwsgi -processes 4 --socket /tmp/project.sock --home ./env --uid www-data \
        --module project.wsgi.production --pythonpath ./project

Normally you shouldn't just run `make uwsgi` on production server. To ensure
that your site won't go off, you should run last command using supervisor, such
as supervisord, upstart, daemontools and others. You can override `processes`,
`user` and `instance` options as well.

Example of command that may be supervised:
$ make -C ~/Workspace/django-project-template -e user=dgl processes=1 instance=staging uwsgi
